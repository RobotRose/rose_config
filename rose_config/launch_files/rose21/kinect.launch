<launch>	
    <!-- Do mapping argument -->
    <arg name="mapping" default="false"/> 

    <!-- Do not use machine files argument -->
    <arg name="sim" default="false"/>

    <!-- Hardware version -->
    <arg name="hardware" default="simulation"/>

    <!-- Get camera name argument-->
    <arg name="kinect_camera_name" default="camera" />

    <!-- Openni kinect  -->
    <include file="$(find freenect_launch)/launch/freenect.launch">
        <arg name="depth_registration" value="true"/> 
        <arg name="num_worker_threads" value="8"/> 
        <arg name="sw_registered_processing" value="false"/> 
        <arg name="camera" value="$(arg kinect_camera_name)" />
        <arg name="publish_tf" value="false" />
        <!-- <arg name="tf_prefix" value="openni" /> -->
    </include>

    <param name="/$(arg kinect_camera_name)/driver/image_mode" value="2" /> <!-- NO LOW RESOLUTION -->
    <param name="/$(arg kinect_camera_name)/driver/depth_mode" value="2" /> <!-- NO LOW RESOLUTION -->
    <param name="/$(arg kinect_camera_name)/driver/data_skip" value="2" /> <!-- DROP FRAMES http://answers.ros.org/question/54360/reduce-frame-rate-fps-kinect-openni_launch/ -->

    <!-- Point cloud filters  -->
    <node machine="pc1"  pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node machine="pc1" pkg="nodelet" type="nodelet" name="voxel_grid" launch-prefix="nice"  args="load pcl/VoxelGrid pcl_manager" output="screen">
        <remap from="~input"  to="/camera/depth_registered/points" />
        <remap from="~output" to="/point_cloud/downsample" />
        <rosparam>
            leaf_size: 0.08
            filter_field_name: z
            filter_limit_min: 0.10
            filter_limit_max: 3.00
            filter_limit_negative: False
        </rosparam>
    </node>

    <!-- Run a StatisticalOutlierRemoval filter to remove outliers -->
    <node machine="pc1" pkg="nodelet" type="nodelet" name="statistical_outlier_removal" launch-prefix="nice" args="load pcl/StatisticalOutlierRemoval pcl_manager" output="screen">
        <remap from="~input"  to="/point_cloud/downsample" />
        <remap from="~output" to="/point_cloud/downsample_outlier" />
        <rosparam>
            <!-- The number of points (k) to use for mean distance estimation Range: 2 to 100 -->
            mean_k: 10
            <!-- The standard deviation multiplier threshold. All points outside the mean +- sigma * std_mul will be considered outliers. Range: 0.0 to 5.0 -->
            stddev: 1.0
            <!-- Set whether the inliers should be returned (true) or the outliers (false) -->
            negative: true
        </rosparam>
    </node>


</launch>
